Assume you are a C++ expert and an EDA (Electronic Design Automation) expert.
We want to design a Device modeling set of API. The general architecture is :
Device :
    -schema_version_    (std::string)
    -device_name_       (std::string)
    -device_version_    (std::string)
    -block_map_         (std::unordered_map of key<block name : string> value<object of block class>)
    -instance_map_      (std::unordered_map of key<instance name : string> value<object of instance class>)
    -instance_vector_   (std::vector of std::shared_ptr<device_block_instance>)
    -param_type_map_    (std::unordered_map of key<type name : std::string> value<object of parameter_type class>)
    -constraint_map_    (std::unordered_map of key<constraint name : std::string> value<object of constraint class>)

    ----------------------------------------------
Assume you are a C++ expert and an EDA (Electronic Design Automation) expert.
We want to design a Device modeling set of API. We start by the most basic conductive element a net.
A net is supposed to be part of a signal (vector of nets) to conduct bit values within a device/block instance.
Here's a suggested descriptio of a C++ class to represent a net :
device_net :
    -net_name_ (std::string)
    -signal_name_ (std::string)
    -source_  (std::string)
    -sink_set_ (std::set<std::string>)

We want to have a class with all necessary getters and setters and with professional doxygen style comments.
We want an override of the operator << of std::ostream that prints out the signal.
We intend for the whole design_spec API to be header only so all member functions should be defined in the header file.
Any logging should go through "spdlog"
------------------------------------------------
I have these (relevant) directories : 
    Device_Modeling/external/ ( has exprtk, googletest and spdlog directories )
    Device_Modeling/src/ 
    Device_Modeling/test/
I have my device_net class in the directory Device_Modeling/src/design_spec and my CMakeLists.txt in the directory Device_Modeling/src/
I have a main.cpp in Device_Modeling/src/
I want to generate an executable from main.cpp that tetsts the design_net class and I want to write gtetsts in the directory Device_Modeling/test/
Can you suggest :
    -gtetsts for the class
    -the content of main.cpp
    -the content of the CMAkeLists.txt file

------------------------------------------------

device_block
Assume you are a C++ expert and an EDA (Electronic Design Automation) expert.
We want to design a Device modeling set of API. we want to define a device_block class to represent 
HW blocks in a VLSI context.
the class Parameter is templated with a type and the type values can be int, double or std::string
We delay the definition of an instance of a block class device_block_instance
A block would have attributes
    - ports_map_ (unordered_map where keys are string names of ports and values device_port class objects defined in file device_port.h)
    - signals_map_ (unordered_map where keys are string names of signals and values device_signal class objects defined in file device_signal.h)
    - double_parameters_map_ (unordered_map where keys are string names of parameters  of type double and values Parameter class objects defined in file rs_parameter.h)
    - int_parameters_map_ (unordered_map where keys are string names of parameters  of type int and values Parameter class objects defined in file rs_parameter.h)
    - string_parameters_map_ (unordered_map where keys are string names of parameters  of type string and values Parameter class objects defined in file rs_parameter.h)
    - attributes_map_ (unordered_map where keys are string names of parameters of type int and values Parameter class objects defined in file rs_parameter.h)
    - instance_map_ (unordered_map where keys are string names of instances and values device_block_instance  class objects defined in file device_block_instance.h)
    - constraint_map_ (unordered_map where keys are string generated by post pending the word "constraint_" and a unique index ( constraint_0, constraint_1 ..) 
        and elements are rs_expression class objects defined in file rs_expression.h)

We want to have a class with all necessary getters and setters and with professional doxygen style comments.
We want an override of the operator << of std::ostream that prints out the signal.
We intend for the whole design_spec API to be header only so all member functions should be defined in the header file.
Any logging should go through "spdlog"
------------------------------------------------
    # -block <block_type_name>        string      // the name of a defined block we are instanciating
    # -name <instance_name>           string      // the currently defined instance name
    # -id <instance_id>               int         // A per design unique instance id (Should be automatic)
    # -logic_location                 {int, int}  // Logic Location (VPR)
    # -logic_address <logical_address> int        // Logic address in chain
    # -io_bank <io_bank_name> (optional)  string  // IO bank name
    # -parent <block_type>    (optional)  string  // Parent block (Creates hierarchy â€“ like Verilog folded model)



device_block_instance is a device_block that has additional attributes :
    -instance_name_             string
    -io_bank_                   string
    -instance_id_               unsigned intgit add 
    -logic_location_x_          int
    -logic_location_y_          int
    -logic_address_             int

We want to have a class with all necessary getters and setters and with professional doxygen style comments.
We want an override of the operator << of std::ostream that prints out the signal.
We intend for the whole design_spec API to be header only so all member functions should be defined in the header file.
Any logging should go through "spdlog"



